\name{get_beta_violins}
\alias{get_beta_violins}
\title{Generate beta violin plot: visualize distribution of \eqn{\beta} 
coefficient means for communities in immune receptor repertoires}
\description{
Use 1. \code{node_summary} data.frame generated by the function 
\code{detect_communities}; 2. \code{beta} data.frame which is part
of \code{posterior_summary} generated by the function \code{dco}; 
and 3. antigen species/genes to visualize distributions of \eqn{\beta} 
coefficient means for communities that contain antigen-specific and 
antigen-unspecific IRs.
}
\details{
The user has to provide a vector of antigen species (e.g. 
\code{ag_species} = c("EBV", "CMV")) and/or a vector of antigen 
genes (e.g. \code{ag_genes} = "MLANA"). Furthermore, the user has 
to provide nodes (\code{node_summary} data.frame created by the 
function \code{detect_communities}) and \code{beta} data.frame 
which is part of \code{posterior_summary} generated by the function 
\code{dco}. 

The user can also select an annotation database \code{db},
such as "vdjdb", "mcpas" or "tcr3d"; and restrict the annotation to
specific IR chains, such as "CDR3a", "CDR3b" or "both". By default,
we will look for perfect matches (\code{db_dist=0}) between CDR3 
sequences in the input and in the annotation database for annotation. 
Flexible annotation based on edit distances can be performed by 
increasing \code{db_dist}.
}
\usage{
get_beta_violins(beta,
                 node_summary,
                 ag_species = NULL, 
                 ag_genes = NULL,
                 db = "vdjdb",
                 db_dist = 0,
                 chain = "both")
}
\arguments{
\item{node_summary}{\code{node_summary} data.frame}
\item{ag_species}{antigen species, character vector, e.g. "EBV".}
\item{ag_genes}{antigen genes, character vector, e.g. "MLANA".}
}
\value{
The output is a list with 4 elements: 

\code{node_annotations}: annotated \code{node_summary} 

\code{beta_summary}: annotated \code{beta} 

\code{vars}: annotation variables

\code{violins}: violin plots (one for each antigen species and gene)
}
\examples{
# load package input data
data("CDR3ab", package = "ClustIRR")
a <- data.frame(CDR3a = CDR3ab[1:500, "CDR3a"],
                  CDR3b = CDR3ab[1:500, "CDR3b"],
                  clone_size = 1,
                  sample = "a")

b <- data.frame(CDR3a = CDR3ab[401:900, "CDR3a"],
                  CDR3b = CDR3ab[401:900, "CDR3b"],
                  clone_size = 1,
                  sample = "b")
b$clone_size[1] <- 20

# run ClustIRR analysis
c <- c(cluster_irr(s = a), cluster_irr(s = b))

# get joint graph
jg <- get_joint_graph(clust_irrs = c)

# detect communities
gcd <- detect_communities(graph = jg$graph, 
                          algorithm = "leiden",
                          resolution = 1,
                          weight = "ncweight",
                          metric = "average",
                          chains = c("CDR3a", "CDR3b"))

# look at outputs
names(gcd)

# look at the community matrix
head(gcd$community_occupancy_matrix)

# look at the community summary
head(gcd$community_summary)

# look at the node summary
head(gcd$node_summary)

# differential community occupancy analysis
dco <- dco(community_occupancy_matrix = gcd$community_occupancy_matrix)

names(dco)

# generate beta violin plots
beta_violins <- get_beta_violins(beta = dco$posterior_summary$beta,
                                 node_summary = gcd$node_summary,
                                 ag_species = c("EBV", "CMV"),
                                 ag_genes = "MLANA",
                                 db = "vdjdb",
                                 db_dist = 0,
                                 chain = "both")
}
