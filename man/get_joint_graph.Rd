\name{get_joint_graph}
\alias{get_joint_graph}
\title{Join graphs obtained from two or more \code{clust_irr} objects}
\usage{get_joint_graph(clust_irrs, cores = 1)}
\arguments{
\item{clust_irrs}{A list of at least two S4 objects generated with the 
function \code{cluster_irr}}
\item{cores}{integer, number of computer cores to use (default = 1)}
}
\value{
This function returns an \code{igraph} object, which is a joint graph of 
the IRRs in the input clust_irrs. The nodes and edges contain many attributes
which are described in the description section. As an additional output, we 
provide a data.frame in which rows are clones (nodes) in the joint graph.
}

\description{
As input we take at least two \code{clust_irr} objects generated by the 
function \code{cluster_irr}.

From each \code{clust_irr} object we generate a graph (with the function 
\code{get_graph}) in which the nodes represent clones, and undirected 
edges are drawn between a pair of nodes if the corresponding clones. 

Additionally, \code{get_joint_graph} performs the following operation 
between each pair of graphs:

First, it merges the nodes. If graphs \code{a} and \code{b} have \code{|a|}
and \code{|b|} nodes, then the joint graph has \code{|a|+|b|} nodes,
regardless of whether exactly the same clone (vertex) is found in both graphs.

Second, it draws edges between similar nodes from the different graphs using
the same algorithm for drawing edges between nodes within an IRR.
}

\examples{
# load package input data
data("CDR3ab", package = "ClustIRR")
a <- data.frame(CDR3b = CDR3ab[1:100, "CDR3b"], sample = "a", clone_size = 1)
b <- data.frame(CDR3b = CDR3ab[1:100, "CDR3b"], sample = "b", clone_size = 1)

# run ClustIRR analysis
c <- c(cluster_irr(s = a), cluster_irr(s = b))

# get graph
g <- get_joint_graph(clust_irrs = c)

names(g)
}
