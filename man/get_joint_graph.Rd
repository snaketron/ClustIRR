\name{get_joint_graph}
\alias{get_joint_graph}
\title{Create joint \code{igraph} object from multiple \code{clust_irr} objects}
\usage{get_joint_graph(clust_irrs, cores = 1)}
\arguments{
\item{clust_irrs}{A list of at least two S4 objects generated with the 
function \code{cluster_irr}}
\item{cores}{number of computer cores to use (default = 1)}
}
\description{
Given a vector of \code{clust_irr} objects, generated by the function 
\code{cluster_irr}, the function \code{get_joint_graph} performs the
following steps:

1. runs the function \code{get_graph} on each \code{clust_irr} object

2. merges the nodes: if graph \code{a} and \code{b} have \code{|a|}
and \code{|b|} nodes, then the joint graph has \code{|a|+|b|} nodes,
regardless of whether exactly the same clone (vertex) is found in both 
graphs.

3. draws edges between nodes from the different graphs using the same 
algorithm for drawing edges between nodes within an IRR (see function 
\code{clust_irr}).

4. return a joint graph as \code{igraph} object

5. return the input clustirr object list

6. return a logical \code{joint_graph}=TRUE
}

\value{
The main output is an \code{igraph} object.
}

\examples{
# load package input data
data("CDR3ab", package = "ClustIRR")
a <- data.frame(CDR3b = CDR3ab[1:100, "CDR3b"], sample = "a", clone_size = 1)
b <- data.frame(CDR3b = CDR3ab[1:100, "CDR3b"], sample = "b", clone_size = 1)

# run ClustIRR analysis
c <- c(cluster_irr(s = a), cluster_irr(s = b))

# get graph
g <- get_joint_graph(clust_irrs = c)

names(g)
}
